{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/album/album-create/album-create.component.ts","./src/app/album/album-create/album-create.component.html","./src/app/album/album-routing.module.ts","./src/app/album/album.component.ts","./src/app/album/album.component.html","./src/app/album/album.module.ts","./src/app/album/album.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/band/band-routing.module.ts","./src/app/band/band.component.ts","./src/app/band/band.component.html","./src/app/band/band.module.ts","./src/app/band/band.service.ts","./src/app/band/brand-create/brand-create.component.ts","./src/app/band/brand-create/brand-create.component.html","./src/app/home/home-routing.module.ts","./src/app/home/sidebar/sidebar.component.ts","./src/app/home/sidebar/sidebar.component.html","./src/app/production/production-create/production-create.component.ts","./src/app/production/production-create/production-create.component.html","./src/app/production/production-routing.module.ts","./src/app/production/production.component.ts","./src/app/production/production.component.html","./src/app/production/production.module.ts","./src/app/production/production.service.ts","./src/app/singer/singer-create/singer-create.component.ts","./src/app/singer/singer-create/singer-create.component.html","./src/app/singer/singer-routing.module.ts","./src/app/singer/singer.component.ts","./src/app/singer/singer.component.html","./src/app/singer/singer.module.ts","./src/app/singer/singer.service.ts","./src/app/songs/songs-create/songs-create.component.ts","./src/app/songs/songs-create/songs-create.component.html","./src/app/songs/songs-routing.module.ts","./src/app/songs/songs.component.ts","./src/app/songs/songs.component.html","./src/app/songs/songs.module.ts","./src/app/songs/songs.service.ts","./src/app/studio/studio-create/studio-create.component.ts","./src/app/studio/studio-create/studio-create.component.html","./src/app/studio/studio-routing.module.ts","./src/app/studio/studio.component.ts","./src/app/studio/studio.component.html","./src/app/studio/studio.module.ts","./src/app/studio/studio.service.ts","./src/app/writer/writer-create/writer-create.component.ts","./src/app/writer/writer-create/writer-create.component.html","./src/app/writer/writer-routing.module.ts","./src/app/writer/writer.component.ts","./src/app/writer/writer.component.html","./src/app/writer/writer.module.ts","./src/app/writer/writer.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\n\n\ninterface Album {\n  value: number;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'app-album-create',\n  templateUrl: './album-create.component.html',\n  styleUrls: ['./album-create.component.css']\n})\n\n\n\nexport class AlbumCreateComponent implements OnInit {\n\n  addAlbumForm: FormGroup;\n  selectedValue = \"\";\n\n  constructor(\n    private fb: FormBuilder,\n    private _router: Router\n  ) { }\n\n  album() {\n    this.addAlbumForm = this.fb.group({\n      title: ['', Validators.required],\n      type: ['', Validators.required],\n      date: ['', Validators.required]\n\n    });\n  }\n\n  albumCreate() {\n    console.log(this.addAlbumForm.value);\n    this.addAlbumForm.reset();\n    this._router.navigate(['./album']);\n\n\n  }\n\n  ngOnInit(): void {\n    this.album();\n  }\n\n\n  albums: Album[] = [\n    { value: 1, viewValue: \"single Album\" },\n    { value: 2, viewValue: \"Multi Album\" }\n\n  ];\n\n}\n","<div class=\"container pt-4\">\n    <h3>Create new Album</h3>\n    <form [formGroup]=\"addAlbumForm\" (ngSubmit)=\"albumCreate()\">\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Title</label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"title\" required>\n            </div>\n        </div>\n        <br>\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Production Date</label>\n            <div class=\"col-sm-5\">\n                <mat-form-field color=\"accent\" appearance=\"fill\">\n                    <mat-label>choose a date</mat-label>\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker1></mat-datepicker>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <br>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Type</label>\n            <div class=\"col-sm-5\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>seelct album </mat-label>\n                    <mat-select [(ngModel)]=\"selectedValue\" name=\"type\" formControlName=\"type\">\n                        <mat-option *ngFor=\"let album of albums\" [value]=\"album.value\">\n                            {{album.viewValue}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <br>\n\n        <div class=\"form-group row\">\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"!addAlbumForm.valid\"> Create</button>\n            </div>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlbumCreateComponent } from './album-create/album-create.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AlbumComponent } from './album.component';\n\nconst routes = [\n  { path: '', component: AlbumComponent },\n  \n  { path: 'create', component: AlbumCreateComponent },\n\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule, \n    RouterModule.forChild(routes)\n  ]\n})\nexport class AlbumRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlbumService} from './album.service'\n\n@Component({\n  selector: 'app-album',\n  templateUrl: './album.component.html',\n  styleUrls: ['./album.component.css']\n})\nexport class AlbumComponent implements OnInit {\n\n  constructor(\n    private albumService: AlbumService,\n    private _router: Router\n  ) { }\n    albumLists=[];\n  ngOnInit(): void {\n    this.albumLists=this.albumService.getAlbum();\n  }\n  goToCreate(){\n    this._router.navigate(['album/create']);\n  }\n\n}\n","<div class=\"container pt-4\">\n    <h4> List of Album</h4>\n    <div class=\"row\">\n        <div class=\"col-sm-10\"> </div>\n        <div class=\"col-sm-2\">\n            <button class=\"btn btn-secondary\" (click)=\"goToCreate()\"> Create </button>\n        </div>\n    </div>\n    <div class=\"pt-4\">\n        <table class=\"table table-striped  table-hover \">\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Type</th>\n                    <th>Production Date</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let albumList of albumLists\" [value]=\"selected\">\n                    <td>{{albumList.name}}</td>\n                    <td *ngIf=\"albumList.type ==  1 \">{{ \"Single Album\" }}</td>\n                    <td *ngIf=\"albumList.type ==  2 \">{{ \"Multi Album\" }}</td>\n                    <td>{{ albumList.date }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlbumCreateComponent } from './album-create/album-create.component';\nimport { AlbumComponent } from './album.component';\nimport { AlbumRoutingModule } from './album-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AlbumService } from './album.service';\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n\n@NgModule({\n  declarations: [\n    AlbumCreateComponent,\n    AlbumComponent],\n  imports: [\n    CommonModule,\n    AlbumRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n\n  ],\n  providers: [AlbumService],\n})\nexport class AlbumModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlbumService {\n\n  constructor() { }\n  getAlbum() {\n    const albumList = [\n      { name: \"Lucky\", type: 1, date: \"2020/4/12\" },\n      { name: \"Eleven\", type: 2, date: \"2020/4/12\" },\n      { name: \"Gar\", type: 1, date: \"2020/4/12\" },\n    ];\n    return albumList;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\n\nexport const routes: Routes = [\n  // {\n  //path: '', component: AppComponent, children: [\n  { path: '', redirectTo: 'singer', pathMatch: 'full' },\n\n  {\n    path: 'singer',\n    loadChildren: () => import('./singer/singer.module').then(m => m.SingerModule)\n  },\n\n  {\n    path: 'album',\n    loadChildren: () => import('./album/album.module').then(m => m.AlbumModule)\n  },\n\n  {\n    path: 'band',\n    loadChildren: () => import('./band/band.module').then(m => m.BandModule)\n  },\n\n  {\n    path: 'production',\n    loadChildren: () => import('./production/production.module').then(m => m.ProductionModule)\n  },\n\n  {\n    path: 'songs',\n    loadChildren: () => import('./songs/songs.module').then(m => m.SongsModule)\n  },\n\n  {\n    path: 'studio',\n    loadChildren: () => import('./studio/studio.module').then(m => m.StudioModule)\n  },\n\n  {\n    path: 'writer',\n    loadChildren: () => import('./writer/writer.module').then(m => m.WriterModule)\n  },\n\n\n];\n\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { createPopper } from '@popperjs/core';\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor() { }\n\n\n\n}\n\n\n","<div class=\"head\">\n    <div class=\"title has-text-centered\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <p class=\"\">Song Management System</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<mat-drawer-container class=\"example-container\">\n    <mat-drawer #drawer opened class=\"example-sidenav\" mode=\"side\">\n        <div class=\"sidebar\" data-color=\"danger\" data-background-color=\"white\">\n\n            <app-sidebar></app-sidebar>\n\n            <div class=\"sidebar-background\">\n            </div>\n        </div>\n    </mat-drawer>\n\n    <div class=\"main-panel\">\n        <a>\n            <mat-icon class=\"text-danger navbar-toogle-btn\" (click)='drawer.toggle()' data-q=\"q-toogle-nav\">\n                compare_arrows\n            </mat-icon>\n        </a>\n\n        <router-outlet></router-outlet>\n\n    </div>\n\n</mat-drawer-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SingerModule } from '../app/singer/singer.module';\nimport { WriterModule } from '../app/writer/writer.module';\nimport { AlbumModule } from '../app/album/album.module';\nimport { BandModule } from '../app/band/band.module';\nimport { ProductionModule } from '../app/production/production.module';\nimport { SongsModule } from '../app/songs/songs.module';\nimport { StudioModule } from '../app/studio/studio.module';\nimport { SingerService } from './singer/singer.service';\nimport { AlbumRoutingModule } from './album/album-routing.module';\nimport { SingerRoutingModule } from './singer/singer-routing.module';\nimport { BandRoutingModule } from './band/band-routing.module';\nimport { SongsRoutingModule } from './songs/songs-routing.module';\nimport { StudioRoutingModule } from './studio/studio-routing.module';\nimport { WriterRoutingModule } from './writer/writer-routing.module';\nimport { WriterService } from './writer/writer.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { SidebarComponent } from './home/sidebar/sidebar.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { HomeRoutingModule } from './home/home-routing.module';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SingerModule,\n    WriterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AlbumModule,\n    BandModule,\n    ProductionModule,\n    SongsModule,\n    StudioModule,\n    AlbumRoutingModule,\n    SingerRoutingModule,\n    BandRoutingModule,\n    SongsRoutingModule,\n    StudioRoutingModule,\n    WriterRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    HomeRoutingModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatNativeDateModule\n\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrandCreateComponent } from './brand-create/brand-create.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BandComponent } from './band.component';\n\n\nconst routes = [\n  { path: '', component : BandComponent},\n\n  { path: 'create', component: BrandCreateComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class BandRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BandService } from './band.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-band',\n  templateUrl: './band.component.html',\n  styleUrls: ['./band.component.css']\n})\nexport class BandComponent implements OnInit {\n\n  bandLists = [];\n\n\n  constructor(\n    private bandService: BandService,\n    private _router : Router\n    ) { }\n\n  ngOnInit(): void {\n    this.bandLists = this.bandService.getBand();\n\n  }\n\n  goToCreate() {\n    this._router.navigate(['band/create']);\n  }\n\n\n}\n","<div class=\"container pt-4\">\n    <h4> Lists of Band</h4>\n    <div class=\"row\">\n        <div class=\"col-sm-10\"> </div>\n        <div class=\"col-sm-2\">\n\n            <button class=\"btn btn-secondary\" (click)=\"goToCreate()\"> Create </button>\n\n        </div>\n    </div>\n\n    <div class=\"pt-4\">\n        <table class=\"table table-striped \">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Member</th>\n                    <th>Address</th>\n                    <th>Phone No:</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let bandList of bandLists\">\n                    <td>{{bandList.singrerName}}</td>\n                    <td>{{ bandList.groupMember }}</td>\n                    <td>{{ bandList.address }}</td>\n                    <td>{{ bandList.phone }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrandCreateComponent } from './brand-create/brand-create.component';\nimport { BandService } from './band.service';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BandComponent } from './band.component';\nimport { BandRoutingModule } from './band-routing.module';\n\n\n\n@NgModule({\n  declarations: [\n    BrandCreateComponent,\n    BandComponent\n  ],\n\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BandRoutingModule\n  ],\n\n  providers: [BandService]\n})\n\nexport class BandModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BandService {\n\n  constructor() { }\n\n  getBand(){\n      const bandList=[\n        {bandName : \"Ni Ni Khin Zaw\" , groupMember :\"4\" , phone :\"09761275382\" , address :\"(21)Q, Yangon Tsp\"  },\n        {singrerName : \"Eaint Chit\" ,groupMember :\"5\" , phone :\"09761275382\" , address :\"Tha Mine\"},\n        {singrerName : \"Wai La\" , groupMember :\"7\" ,phone :\"09761275382\" , address :\"(53)Street, Yangon\"  },\n        {singrerName : \"Shwe Htoo\" , groupMember :\"4\" ,phone :\"09761275382\" , address :\"Mayangone Tsp\"  },\n        {singrerName : \"Bunny Phyo\" , groupMember :\"6\" ,phone :\"09761275382\" , address :\"(23)Street , Yangon\" },\n        {singrerName : \"Mi Sandi\" , groupMember:\"5\" , phone :\"09761275382\" , address :\"(2)Q, Mayangone Township, Yangon\"}\n      ];\n      return bandList;\n    }\n    \n  }\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-brand-create',\n  templateUrl: './brand-create.component.html',\n  styleUrls: ['./brand-create.component.css']\n})\nexport class BrandCreateComponent implements OnInit {\n\n  bandCreateForm : FormGroup;\n\n  constructor(private fb : FormBuilder, private  _router : Router) { }\n\n  bandCreate(){\n    this.bandCreateForm=this.fb.group({\n\n      name :['' , Validators.required],\n      groupMember :['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(\"[0-9]{11}\")]],\n      address: ['', Validators.required]\n\n    });\n  }\n\n  createBand(){\n    console.log(this.bandCreateForm.value);\n    this.bandCreateForm.reset();\n    this._router.navigate(['./band']);\n  }\n\n  ngOnInit(): void {\n    this.bandCreate();\n  }\n\n}\n","<div class=\"container pt-4\">\n  <h3>Create new Band</h3>\n  <form [formGroup]=\"bandCreateForm\" (ngSubmit)=\"createBand()\">\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">Name</label>\n      <div class=\"col-sm-5\">\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\" required>\n      </div>\n    </div>\n    <br>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">Group Member</label>\n      <div class=\"col-sm-5\">\n        <input type=\"text\" class=\"form-control\" formControlName=\"groupMember\">\n      </div>\n    </div>\n    <br>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">Phone No</label>\n      <div class=\"col-sm-5\">\n        <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n      </div>\n    </div>\n    <br>\n\n    <div class=\"form-group row\">\n      <label class=\"col-sm-2 col-form-label\">Address</label>\n      <div class=\"col-sm-5\">\n        <input type=\"text\" class=\"form-control\" formControlName=\"address\">\n      </div>\n    </div>\n    <br>\n    <div class=\"form-group row\">\n      <div class=\"col-sm-2\"></div>\n      <div class=\"col-sm-10\">\n        <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"!bandCreateForm.valid\"> Create</button>\n      </div>\n    </div>\n  </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    \n  ],\n  \n})\nexport class HomeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n    constructor(private fb: FormBuilder, private _router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tab\">\n    <nav id=\"sidebar\" class=\"navbar-dark\">\n        <ul class=\"navbar-nav\">\n\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-sm\" [routerLink]=\"['singer']\">Singer</a>\n            </li>\n\n            <li class=\"nav-item active\">\n                <a class=\"btn btn-sm\" [routerLink]=\"['writer']\">Writer</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"btn btn-sm\" [routerLink]=\"['band']\">Band</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <!-- <mat-icon style=\"font-size: 2.5rem;\">album</mat-icon> -->\n                <a class=\"btn btn-sm\" [routerLink]=\"['album']\">Album</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <!-- <i class=\"fa fa-product-hunt\" style=\"font-size: 2rem;\"></i> -->\n                <a class=\"btn btn-sm\" [routerLink]=\"['production']\">Production</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"btn btn-sm\" [routerLink]=\"['songs']\">Songs</a>\n            </li>\n\n            <li class=\"nav-item\">\n                <a class=\"btn btn-sm\" [routerLink]=\"['studio']\">Studio</a>\n            </li>\n\n        </ul>\n    </nav>\n\n    <!-- <mat-icon style=\"font-size: 2rem;\">queue_music</mat-icon>\n    <br>\n    <mat-icon style=\"font-size: 2.5rem;\">album</mat-icon>\n\n    <i class=\"fas fa-music\" style=\"font-size: 2rem;\"></i> \n\n    <br>\n\n    <i class=\"fa fa-product-hunt\" style=\"font-size: 2rem;\"></i>\n    <br>\n\n    <i class=\"fa fa-edit\" style=\"font-size: 2rem;\"></i>\n -->\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder , Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-production-create',\n  templateUrl: './production-create.component.html',\n  styleUrls: ['./production-create.component.css']\n})\nexport class ProductionCreateComponent implements OnInit {\n\n  createProductionForm :FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private _routeer :Router\n    \n    ) { }\n\n  createProduction(){\n    this.createProductionForm=this.fb.group({\n\n      name: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(\"[0-9]{11}\")]],\n      address: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.createProduction();\n  }\n  onCreate(){\n    console.log(this.createProductionForm.value);\n    this.createProductionForm.reset();\n    this._routeer.navigate(['./production']);\n\n  }\n\n}\n","<div class=\"container pt-4\">\n    <h3>Create new Production</h3>\n     <form [formGroup]=\"createProductionForm\" (ngSubmit)=\"onCreate()\"> \n         <div class=\"form-group row\">\n             <label class=\"col-sm-2 col-form-label\">Name</label>\n             <div class=\"col-sm-5\">\n               <input type=\"text\" class=\"form-control\"  formControlName=\"name\" required>\n             </div>\n           </div>\n           <br>\n\n           <div class=\"form-group row\">\n             <label class=\"col-sm-2 col-form-label\">Phone No</label>\n             <div class=\"col-sm-5\">\n               <input type=\"text\" class=\"form-control\" formControlName=\"phone\" >\n             </div>\n           </div>\n           <br>\n \n           <div class=\"form-group row\">\n             <label class=\"col-sm-2 col-form-label\">Address</label>\n             <div class=\"col-sm-5\">\n               <input type=\"text\" class=\"form-control\" formControlName=\"address\" >\n             </div>\n           </div>\n           <br>\n           <div class=\"form-group row\">\n               <div class=\"col-sm-2\"></div>\n             <div class=\"col-sm-10\">\n               <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"!createProductionForm.valid\"> Create</button>\n             </div>\n           </div>\n       </form>\n     </div>\n   \n \n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductionCreateComponent } from './production-create/production-create.component';\nimport { ProductionComponent } from './production.component';\n\nconst routes = [\n  { path: '', component: ProductionComponent },\n  { path: 'create', component: ProductionCreateComponent },\n  { path: '', redirectTo: '/production', pathMatch: 'full' }\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n  ]\n})\nexport class ProductionRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductionService } from './production.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-production',\n  templateUrl: './production.component.html',\n  styleUrls: ['./production.component.css']\n})\nexport class ProductionComponent implements OnInit {\n\n  constructor(\n    private productionService : ProductionService,\n    private _router : Router\n  ) { }\n\n  productionLists=[];\n\n  ngOnInit(): void {\n    this.productionLists=this.productionService.getProduction();\n  }\n\n  goToCreate(){\n      this._router.navigate(['production/create']);\n  }\n\n}\n","<div class=\"container pt-4\">\n    <h4> List of Production</h4>\n    <div class=\"row\">\n        <div class=\"col-sm-10\"> </div>\n        <div class=\"col-sm-2\">\n\n            <button class=\"btn btn-secondary\" (click)=\"goToCreate()\"> Create </button>\n\n        </div>\n    </div>\n\n    <div class=\"pt-4\">\n        <table class=\"table table-striped \">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Phone No:</th>\n                    <th>Address</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let productionList of productionLists\">\n                    <td>{{productionList.productionName}}</td>\n                    <td>{{ productionList.phone }}</td>\n                    <td>{{ productionList.address }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductionCreateComponent } from './production-create/production-create.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ProductionService } from './production.service';\nimport { ProductionComponent } from './production.component';\nimport { ProductionRoutingModule } from './production-routing.module'\nimport { FormsModule} from '@angular/forms'\n\n\n@NgModule({ \n  declarations: [\n    ProductionCreateComponent,\n    ProductionComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ProductionRoutingModule\n\n  ],\n  providers :[ProductionService]\n})\nexport class ProductionModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductionService {\n\n  constructor() { }\n\n  getProduction(){\n    const productionList=[\n      {productionName : \"Ni Ni Khin Zaw\" , phone :\"09761275382\" , address :\"(21)Q, Yangon Tsp\"  },\n      {productionName : \"Eaint Chit\" , phone :\"09761275382\" , address :\"Tha Mine\" },\n      {productionName : \"Wai La\" , phone :\"09761275382\" , address :\"(53)Street, Yangon\" },\n      {productionName : \"Shwe Htoo\" , phone :\"09761275382\" , address :\"Mayangone Tsp\"  },\n      {productionName : \"Bunny Phyo\" , phone :\"09761275382\" , address :\"(23)Street , Yangon\" },\n      {productionName : \"Mi Sandi\" , phone :\"09761275382\" , address :\"(2)Q, Yangon\"  }\n    ];\n    return productionList;\n \n\n  \n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-singer-create',\n  templateUrl: './singer-create.component.html',\n  styleUrls: ['./singer-create.component.css']\n})\nexport class SingerCreateComponent implements OnInit {\n\n  addSingerForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private _router: Router\n  ) {\n\n  }\n\n  singer() {\n\n    this.addSingerForm = this.fb.group({\n      name: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(\"[0-9]{11}\")]],\n      address: ['', Validators.required],\n      gender: ['', Validators.required]\n\n    });\n  }\n\n\n  singerCreate() {\n    console.log(this.addSingerForm.value);\n    this.addSingerForm.reset();\n    this._router.navigate(['./singer']);\n  }\n\n\n\n\n  ngOnInit(): void {\n\n    this.singer();\n\n  }\n\n}\n","<div class=\"container pt-4\">\n    <h3>Create new Singer</h3>\n    <form [formGroup]=\"addSingerForm\" (ngSubmit)=\"singerCreate()\">\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Name</label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\" required>\n                <small *ngIf=\"addSingerForm.get('name').touched && addSingerForm.get('name').hasError('required')\"> please enter singer name</small>\n            </div>\n        </div>\n\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Phone No</label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                <small *ngIf=\"addSingerForm.get('phone').touched && addSingerForm.get('phone').hasError('required')\"> please enter singer,s  phone nunmer</small>\n            </div>\n        </div>\n\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Address</label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"address\">\n                <small *ngIf=\"addSingerForm.get('address').touched && addSingerForm.get('address').hasError('required')\"> please enter singer,s  phone nunmer</small>\n            </div>\n        </div>\n\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label\">Gender</label>\n            <div class=\"form-check col-sm-2\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gender\" value=\"female\" formControlName=\"gender\" checkeds>\n                <label class=\"form-check-label\">\n                   Female\n                 </label>\n            </div>\n            <div class=\"form-check col-sm-2\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gender\" value=\"male\" formControlName=\"gender\">\n                <label class=\"form-check-label\">\n                   Male\n                 </label>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-10\">\n                <button type=\"submit\" class=\"btn\" [disabled]=\"!addSingerForm.valid\"> Create</button>\n            </div>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SingerCreateComponent } from './singer-create/singer-create.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SingerComponent } from './singer.component';\n\nconst routescreate = [\n  { path: '', component: SingerComponent },\n\n  { path: 'create', component: SingerCreateComponent },\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routescreate)\n  ]\n})\nexport class SingerRoutingModule { }\n\n","import { Component, OnInit } from '@angular/core';\nimport { SingerService } from './singer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-singer',\n  templateUrl: './singer.component.html',\n  styleUrls: ['./singer.component.css']\n})\nexport class SingerComponent implements OnInit {\n\n  constructor(\n    private singerService: SingerService,\n    private _router: Router\n  ) { }\n\n  singerLists = [];\n  ngOnInit(): void {\n    this.singerLists = this.singerService.getSinger();\n  }\n\n  goToCreate() {\n    this._router.navigate(['singer/create']);\n  }\n}\n","<div class=\"container pt-4\">\n    <h4> List of Singers</h4>\n    <div class=\"row\">\n        <div class=\"col-sm-10\"> </div>\n        <div class=\"col-sm-2\">\n\n            <button class=\"btn \" (click)=\"goToCreate()\"> Create </button>\n\n        </div>\n    </div>\n\n    <div class=\"pt-4\">\n        <table class=\"table table-striped \">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Phone No:</th>\n                    <th>Address</th>\n                    <th>Gender</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let singerList of singerLists\">\n                    <td>{{singerList.singrerName}}</td>\n                    <td>{{ singerList.phone }}</td>\n                    <td>{{ singerList.address }}</td>\n                    <td>{{ singerList.gender }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SingerCreateComponent } from './singer-create/singer-create.component';\n//import { SingerListComponent } from './singer-list/singer-list.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SingerService } from './singer.service';\nimport { SingerRoutingModule } from './singer-routing.module';\nimport { SingerComponent } from './singer.component';\n\n\n\n@NgModule({\n  declarations: [\n    SingerCreateComponent,\n   \n    SingerComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SingerRoutingModule\n  ],\n  schemas: [\n    NO_ERRORS_SCHEMA\n  ],\n  providers: [SingerService],\n\n})\nexport class SingerModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SingerService {\n\n  constructor() { }\n  getSinger(){\n    const singerList=[\n      {singrerName : \"Ni Ni Khin Zaw\" , phone :\"09761275382\" , address :\"(21)Q, Yangon Tsp\" , gender: \"Female\" },\n      {singrerName : \"Eaint Chit\" , phone :\"09761275382\" , address :\"Tha Mine\", gender :\"Female\" },\n      {singrerName : \"Wai La\" , phone :\"09761275382\" , address :\"(53)Street, Yangon\" , gender: \"Male\" },\n      {singrerName : \"Shwe Htoo\" , phone :\"09761275382\" , address :\"Mayangone Tsp\" , gender: \"Male\" },\n      {singrerName : \"Bunny Phyo\" , phone :\"09761275382\" , address :\"(23)Street , Yangon\" , gender: \"Male\" },\n      {singrerName : \"Mi Sandi\" , phone :\"09761275382\" , address :\"(2)Q, Yangon\" , gender: \"Female\" }\n    ];\n    return singerList;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SongsService } from '../songs.service';\n\n@Component({\n  selector: 'app-songs-create',\n  templateUrl: './songs-create.component.html',\n  styleUrls: ['./songs-create.component.css']\n})\nexport class SongsCreateComponent implements OnInit {\n\n  addSongsForm: FormGroup;\n  selectedValue = \"\";\n  selectedStatus = \"\";\n\n  singerLists = [\n    { value: 1, singerName: \"Wine Su Khaing Thein\" },\n    { value: 2, singerName: \" Sandi Myint Lwin\" },\n    { value: 3, singerName: \"Eaint Chit\" },\n    { value: 4, singerName: \"Ar-T\" },\n  ];\n\n  writerLists = [\n    { value: 1, writerName: \"Wai Gyi\" },\n    { value: 2, writerName: \" Bunny Phyo\" },\n    { value: 3, writerName: \"Eaint Chit\" },\n    { value: 4, writerName: \"Sai Sai Kham Leng\" },\n  ];\n\n  productionLists = [\n    { value: 1, name: \"Lucky 7\" },\n    { value: 2, name: \"Sapal Phyu\" },\n    { value: 3, name: \"4 Clover\" },\n  ];\n\n  bandLists = [\n    { value: 1, name: \"Boy Band\" },\n    { value: 2, name: \" Lipzat\" },\n    { value: 3, name: \"72 Coder\" },\n  ];\n\n  studioLists = [\n    { value: 1, name: \"Lucky 7\" },\n    { value: 2, name: \"Logistics\" },\n    { value: 3, name: \"Shun Ku\" },\n  ];\n\n  songInfo = {\n    title: \"\",\n    singerName: \"\",\n    writerName: \" \",\n    productionName: \"\",\n    bandName: \"\",\n    studioName: \"\",\n    fileName: \"\"\n  }\n\n  songs() {\n    this.addSongsForm = this.fb.group({\n      title: ['', Validators.required],\n      singerName: ['', Validators.required],\n      writerName: ['', Validators.required],\n      productionName: ['', Validators.required],\n      bandName: ['', Validators.required],\n      studioName: ['', Validators.required],\n      file: ['', Validators.required]\n    });\n\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private _router: Router,\n\n  ) { }\n\n  ngOnInit(): void {\n    this.songs();\n  \n  }\n\n  onFileChange(event) {\n    let reader = new FileReader();\n    let file = event.target.files[0];\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      // console.log(reader.result);\n      //console.log(file);\n    }\n  }\n  onUpload() {\n    console.log(this.addSongsForm.value);\n   // console.log(this.songInfo);\n    this.addSongsForm.reset();\n    this._router.navigate(['./songs']);\n\n  }\n\n}\n\n\n//public onFileChange(event) {\n  //     const reader = new FileReader();\n\n  //      if (event.target.files && event.target.files.length) {\n  //       this.fileName = event.target.files[0].name;\n  //       const [file] = event.target.files;\n  //       reader.readAsDataURL(file);\n  //       console.log(reader.readAsDataURL(file));\n  //       console.log(file);\n  //     reader.onload = () => {\n  //       this.addSongsForm.patchValue({\n  //         file: reader.result\n  //       });\n  //     };\n  //   }\n  // }\n\n\n","<div class=\"container pt-4\">\n    <h3>Create new Song</h3>\n    <form [formGroup]=\"addSongsForm\" (ngSubmit)=\"onUpload()\">\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Title</label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" [(ngModel)]=\"songInfo.title\" class=\"form-control\" formControlName=\"title\" required>\n            </div>\n        </div>\n        <br>\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Singer Name</label>\n            <div class=\"col-sm-10\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Select singer name</mat-label>\n                    <mat-select name=\"type\" [(ngModel)]=\"songInfo.singerName\" formControlName=\"singerName\">\n                        <mat-option *ngFor=\"let singerList of singerLists\" [value]=\"singerList.value\">\n                            {{singerList.singerName}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <br>\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Writer Name</label>\n            <div class=\"col-sm-5\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>Select writer name</mat-label>\n                    <mat-select [(ngModel)]=\"songInfo.writerName\" name=\"type\" formControlName=\"writerName\">\n                        <mat-option *ngFor=\"let writerList of writerLists\" [value]=\"writerList.value\">\n                            {{writerList.writerName}} {{writerLists.selectedValue}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <br>\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Production Name</label>\n            <div class=\"col-sm-5\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>select production</mat-label>\n                    <mat-select [(ngModel)]=\"songInfo.productionName\" name=\"type\" formControlName=\"productionName\">\n                        <mat-option *ngFor=\"let productionList of productionLists\" [value]=\"productionList.value\">\n                            {{productionList.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <br>\n\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Band Name</label>\n            <div class=\"col-sm-5\">\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>select Band</mat-label>\n                    <mat-select [(ngModel)]=\"songInfo.bandName\" name=\"type\" formControlName=\"bandName\">\n                        <mat-option *ngFor=\"let bandList of bandLists\" [value]=\"bandList.value\">\n                            {{bandList.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <br>\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Studio Name</label>\n            <div class=\"col-sm-5\">\n\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>select studio </mat-label>\n                    <mat-select [(ngModel)]=\"songInfo.studioName\" name=\"type\" formControlName=\"studioName\">\n                        <mat-option *ngFor=\"let studioList of studioLists\" [value]=\"studioList.value\">\n                            {{studioList.name}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <br>\n\n        <!-- File Upload -->\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">File</label>\n            <div class=\"col-sm-5\">\n                <input type=\"file\" [(ngModel)]=\"songInfo.fileName\" (change)=\"onFileChange($event)\" formControlName=\"file\" />\n            </div>\n        </div>\n\n        <!-- Upload Button -->\n        <div class=\"form-group row\">\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"!addSongsForm.valid\"> Upload</button>\n            </div>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SongsCreateComponent } from './songs-create/songs-create.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SongsComponent } from './songs.component';\n\nconst routes = [\n  { path: '', component: SongsComponent },\n  { path: 'create', component: SongsCreateComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class SongsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SongsService } from './songs.service';\nimport { SingerService } from '../singer/singer.service';\n\n\n@Component({\n  selector: 'app-songs',\n  templateUrl: './songs.component.html',\n  styleUrls: ['./songs.component.css']\n})\nexport class SongsComponent implements OnInit {\n\n  songLists = [];\n\n\n  constructor(\n    private _router: Router,\n    private songService: SongsService,\n  ) { }\n\n  ngOnInit(): void {\n    //this.songLists=this.songService.list();\n\n  }\n  goToCreate() {\n    this._router.navigate(['/songs/create']);\n  }\n\n}\n","<div class=\"container pt-4\">\n    <h4> List of Song</h4>\n    <div class=\"row\">\n        <div class=\"col-sm-10\"> </div>\n        <div class=\"col-sm-2\">\n\n            <button class=\"btn btn-secondary\" (click)=\"goToCreate()\"> Create </button>\n\n        </div>\n    </div>\n\n    <div class=\"pt-4\">\n        <table class=\"table table-striped \">\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Singer</th>\n                    <th>Writer</th>\n                    <th>Production</th>\n                    <th>Band</th>\n                    <th>Studio</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <!-- <tr *ngFor=\"let songName of songList$ | async\">\n                    <td>{{songName}}</td> -->\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SongsCreateComponent } from './songs-create/songs-create.component';\nimport { SongsComponent } from './songs.component';\nimport { SongsService } from './songs.service'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SongsRoutingModule } from './songs-routing.module';\nimport { MatSelectModule } from '@angular/material/select';\n\n\n\n\n@NgModule({\n  declarations: [\n    SongsCreateComponent,\n    SongsComponent\n  ],\n\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SongsRoutingModule,\n    MatSelectModule\n  ],\n  providers: [SongsService]\n})\nexport class SongsModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongsService {\n\n  private fileList: string[] = new Array<string>();\n  private fileList$: Subject<string[]> = new Subject<string[]>();\n\n  constructor() { }\n\n  // getSongs() {\n  //   const songLists = [\n  //     {\n  //       singerName: [\"Wine Su Khaing Thein\", \" Sandi Myint Lwin\", \"Eaint Chit\", \"Ar-T\", \"Shwe Htoo\"],\n  //     }\n     \n  //   ]\n  //   return songLists;\n  // }\n\n\n  public list(): Observable<string[]> {\n    return this.fileList$;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { from } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n\n@Component({\n  selector: 'app-studio-create',\n  templateUrl: './studio-create.component.html',\n  styleUrls: ['./studio-create.component.css']\n})\nexport class StudioCreateComponent implements OnInit {\n\n  addStudioForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.studio();\n  }\n\n  studio() {\n    this.addStudioForm = this.fb.group({\n      name: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(\"[0-9]{11}\")]],\n      address: ['', Validators.required],\n\n    });\n\n  }\n\n  studioCreate() {\n    console.log(this.addStudioForm.value);\n    this.addStudioForm.reset();\n    this._router.navigate(['./studio']);\n  }\n\n}\n","<div class=\"container pt-4\">\n    <h3>Create new Studio</h3>\n    <form [formGroup]=\"addStudioForm\" (ngSubmit)=\"studioCreate()\">\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Name</label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"name\" required>\n                <small *ngIf=\"addStudioForm.get('name').touched && addStudioForm.get('name').hasError('required')\"> please enter studio name</small>\n            </div>\n        </div>\n        <br>\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Phone No</label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"phone\">\n                <small *ngIf=\"addStudioForm.get('phone').touched && addStudioForm.get('phone').hasError('required')\"> please enter studio,s  phone nunmer</small>\n            </div>\n        </div>\n        <br>\n\n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Address</label>\n            <div class=\"col-sm-5\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"address\">\n                <small *ngIf=\"addStudioForm.get('address').touched && addStudioForm.get('address').hasError('required')\"> please enter studio,s  phone nunmer</small>\n            </div>\n        </div>\n        <br>\n\n        <div class=\"form-group row\">\n            <div class=\"col-sm-2\"></div>\n            <div class=\"col-sm-10\">\n                <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"!addStudioForm.valid\"> Create</button>\n            </div>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StudioCreateComponent } from './studio-create/studio-create.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StudioComponent } from './studio.component';\n\nconst routes = [\n  { path: '', component: StudioComponent },\n  { path: 'create', component: StudioCreateComponent },\n\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class StudioRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StudioService } from './studio.service';\n\n@Component({\n  selector: 'app-studio',\n  templateUrl: './studio.component.html',\n  styleUrls: ['./studio.component.css']\n})\nexport class StudioComponent implements OnInit {\n\n  studioLists = [];\n\n  constructor(\n    private studioService: StudioService,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.studioLists = this.studioService.getStudio();\n  }\n\n  goToCreate() {\n    this._router.navigate(['studio/create']);\n  }\n\n}\n","<div class=\"container pt-4\">\n    <h4> List of Studio</h4>\n    <div class=\"row\">\n        <div class=\"col-sm-10\"> </div>\n        <div class=\"col-sm-2\">\n\n            <button class=\"btn btn-secondary\" (click)=\"goToCreate()\"> Create </button>\n\n        </div>\n    </div>\n\n    <div class=\"pt-4\">\n        <table class=\"table table-striped \">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Address</th>\n                    <th>Phone No:</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let StudioList of studioLists\">\n                    <td>{{StudioList.studioName}}</td>\n\n                    <td>{{ StudioList.phone }}</td>\n                    <td>{{ StudioList.address }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StudioCreateComponent } from './studio-create/studio-create.component';\nimport { StudioComponent } from './studio.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { StudioService} from './studio.service'\nimport { StudioRoutingModule } from './studio-routing.module';\n\n\n@NgModule({\n  declarations: [\n    StudioCreateComponent,\n    StudioComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StudioRoutingModule\n  ],\n  providers: [StudioService]\n})\nexport class StudioModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudioService {\n\n  constructor() { }\n\n  getStudio(){\n    const studioList=[\n      { studioName : \"Lucky 7\" , address : \"(21)Q, Yangon Tsp\" , phone : \" 09978715536\" },\n      { studioName : \"New Star\" , address : \"(53)Street, Yangon\" , phone : \"09763211872\" },\n      { studioName : \"Logistic\" , address : \"Mayangone Tsp,Yaungon\" , phone : \" 09342876296\" },\n      { studioName : \"Shan Ku\" , address : \"(23)Street , Yangon\" , phone : \" 09876915022\" },\n    ]\n    return studioList;\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, NgForm } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport {Router} from '@angular/router'\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-writer-create',\n  templateUrl: './writer-create.component.html',\n  styleUrls: ['./writer-create.component.css']\n})\nexport class WriterCreateComponent implements OnInit {\n\n  addWriterForm :FormGroup;\n  constructor(private fb: FormBuilder , private _router :Router) { }\n\n  writer(){\n    this.addWriterForm = this.fb.group({\n      name: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(\"[0-9]{11}\")]],\n      address: ['', Validators.required],\n      gender :['', Validators.required]\n\n    });\n  }\n\n  ngOnInit(): void {\n    this.writer();\n  }\n\n  onSubmit(){\n    console.log(this.addWriterForm.value);\n    this.addWriterForm.reset();\n    this._router.navigate(['./writer']);\n  }\n\n}\n","<div class=\"container pt-4\">\n  <h3>Create new Writer</h3>\n   <form [formGroup]=\"addWriterForm\" (ngSubmit)=\"onSubmit() \"> \n       <div class=\"form-group row\">\n           <label class=\"col-sm-2 col-form-label\">Name</label>\n           <div class=\"col-sm-5\">\n             <input type=\"text\" class=\"form-control\"  formControlName=\"name\" required>\n             <small *ngIf=\"addWriterForm.get('name').touched && addWriterForm.get('name').hasError('required')\"> please enter writer name</small>\n           </div>\n         </div>\n         <br>\n\n         <div class=\"form-group row\">\n           <label class=\"col-sm-2 col-form-label\">Phone No</label>\n           <div class=\"col-sm-5\">\n             <input type=\"text\" class=\"form-control\" formControlName=\"phone\" >\n             <small *ngIf=\"addWriterForm.get('phone').touched && addWriterForm.get('phone').hasError('required')\"> please enter writer,s  phone number</small>\n           </div>\n         </div>\n         <br>\n\n         <div class=\"form-group row\">\n           <label class=\"col-sm-2 col-form-label\">Address</label>\n           <div class=\"col-sm-5\">\n             <input type=\"text\" class=\"form-control\" formControlName=\"address\" >\n             <small *ngIf=\"addWriterForm.get('address').touched && addWriterForm.get('address').hasError('required')\">\n                please enter writer,s  address</small>\n           </div>\n         </div>\n         <br>\n         <div class=\"form-group row\">\n           <label  class=\"col-sm-3 col-form-label\">Gender</label>\n             <div class=\"form-check col-sm-2\">\n                 <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gender\" value=\"female\" checked formControlName=\"gender\">\n                 <label class=\"form-check-label\" >\n                   Female\n                 </label>\n             </div>\n             <div class=\"form-check col-sm-2\">\n                 <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gender\" value=\"male\" checked formControlName=\"gender\">\n                 <label class=\"form-check-label\">\n                   Male\n                 </label>\n             </div>\n         </div>  \n         <div class=\"form-group row\">\n             <div class=\"col-sm-2\"></div>\n           <div class=\"col-sm-10\">\n             <button type=\"submit\" class=\"btn btn-secondary\" [disabled]=\"!addWriterForm.valid\"> Create</button>\n           </div>\n         </div>\n     </form>\n   </div>\n \n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WriterCreateComponent } from './writer-create/writer-create.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WriterComponent } from './writer.component';\n\nconst routes = [\n\n  { path: '', component: WriterComponent },\n  // { path: '', redirectTo: 'list', pathMatch: 'full' },\n\n  { path: 'create', component: WriterCreateComponent }\n];\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class WriterRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { WriterService } from './writer.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-writer',\n  templateUrl: './writer.component.html',\n  styleUrls: ['./writer.component.css']\n})\nexport class WriterComponent implements OnInit {\n\n  writerLists = [];\n  constructor(\n    private writerService: WriterService,\n    private _router: Router\n    ) { }\n\n  ngOnInit(): void {\n    \n    this.writerLists = this.writerService.getWriter();\n  }\n\n  goToCreate() {\n    this._router.navigate(['writer/create']);\n  }\n\n}\n","<div class=\"container pt-4\">\n  <h4> List of Writers</h4>\n  <div class=\"row\">\n    <div class=\"col-sm-10\"> </div>\n    <div class=\"col-sm-2\">\n\n      <button class=\"btn btn-secondary\" (click)=\"goToCreate()\"> Create </button>\n\n    </div>\n  </div>\n\n  <div class=\"pt-4\">\n    <table class=\"table table-striped \">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Phone No:</th>\n          <th>Address</th>\n          <th>Gender</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let writerList of writerLists\">\n          <td>{{writerList.singrerName}}</td>\n          <td>{{ writerList.phone }}</td>\n          <td>{{ writerList.address }}</td>\n          <td>{{ writerList.gender }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>","import { NgModule , NO_ERRORS_SCHEMA} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WriterCreateComponent } from './writer-create/writer-create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { WriterService } from './writer.service';\nimport { WriterComponent } from './writer.component';\nimport { WriterRoutingModule } from './writer-routing.module';\n\n\n@NgModule({\n  declarations: [\n    WriterCreateComponent,\n    WriterComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    WriterRoutingModule\n  ],\n  schemas: [\n    NO_ERRORS_SCHEMA\n  ],\n  providers: [WriterService]\n})\nexport class WriterModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WriterService {\n\n  constructor() { }\n  getWriter() {\n    const writerList = [\n      { writerName: \" \", phone: \"09761275382\", address: \"(21)Q, Yangon Tsp\", gender: \"Female\" },\n      { writerName: \" \", phone: \"09761275382\", address: \"Tha Mine\", gender: \"Female\" },\n      { writerName: \" \", phone: \"09761275382\", address: \"(53)Street, Yangon\", gender: \"Male\" },\n      { writerName: \" \", phone: \"09761275382\", address: \"Mayangone Tsp\", gender: \"Male\" },\n      { writerName: \" \", phone: \"09761275382\", address: \"(23)Street , Yangon\", gender: \"Male\" },\n      { writerName: \" \", phone: \"09761275382\", address: \"(2)Q, Yangon\", gender: \"Female\" }\n    ];\n    return writerList;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}